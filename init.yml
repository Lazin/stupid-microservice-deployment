---
# Provisioning
- hosts: localhost
  connection: local
  gather_facts: False
  user: Lazin
  vars:
      aws_region: us-west-2
      aws_instance_type: t2.micro
      aws_image: ami-3d50120d
      proj_name: latency-proto
  tasks:

    - name: provision instances
      ec2:
          key_name: myawskeypair
          group: default
          instance_type: "{{ aws_instance_type }}"
          image: "{{ aws_image }}"
          wait: True
          exact_count: 4
          count_tag:
              Name: "{{ proj_name }}"
          instance_tags:
              Name: "{{ proj_name }}"
          region: "{{ aws_region }}"
      register: ec2

    - name: create host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

- name: configure machines
  hosts: launched
  sudo: yes

# Instal all apps and scripts needed for latency prototype
  tasks:
    - name: update cache
      apt: update_cache=yes
          
    # Packages to install other packages and to fetch code from git repository
    - name: install essential packages from ubuntu repository
      action: apt pkg={{ item }} state=latest
      with_items:
          - git
          - build-essential
          - python-dev
          - python-setuptools
          - python-pip
        
    # Essential python packages. No virtual-env and no per-host configuration.
    - name: install python packages from pip repository
      action: pip name={{ item }}
      with_items:
          - cherrypy
          - jinja2
          - numpy
          - pandas
          - supervisor
            
    # Install project from git repository
    - name: install main prject
      action: git repo=https://github.com/Lazin/stupid-python-micro-service.git
                  dest=/etc/latency

    # Templates!
    - name: install templates
      action: template src=latency-proto.conf dest=/etc/latency-proto.conf

    # Configure and run server
    - name: copy supervisord config
      action: copy src=supervisord.conf dest=/etc/supervisord.conf

    - name: start supervisord
      action: command supervisord

    # Start http server
    - name: start server
      action: supervisorctl name=latency-prototype state=started
